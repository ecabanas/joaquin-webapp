name: Deploy to Firebase App Hosting on Production Push

on:
  push:
    branches:
      - production

jobs:
  build_and_deploy_prod:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # This permission is essential for Workload Identity Federation!

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/371246421587/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-apphosting@joaquin-q0wvv.iam.gserviceaccount.com'
          create_credentials_file: true # This creates the WIF credentials file and sets GOOGLE_APPLICATION_CREDENTIALS

      # --- REMOVE THE 'Verify GCloud Authentication Context' debug step if still present ---
      # Its job is done, it confirmed our WIF setup works and where the problem was!

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # --- NEW CRITICAL STEP: Configure gcloud context for Firebase CLI ---
      - name: Configure gcloud context for Firebase CLI
        run: |
          # Set the active project for gcloud.
          gcloud config set project joaquin-q0wvv
          # Set the active account for gcloud using the service account email.
          # This should implicitly use the credentials file set by GOOGLE_APPLICATION_CREDENTIALS.
          gcloud config set account github-actions-apphosting@joaquin-q0wvv.iam.gserviceaccount.com
          # Optionally, verify the context (for debugging only, can remove later)
          echo "gcloud context after configuration:"
          gcloud auth list
          gcloud config list project
      # --- END NEW CRITICAL STEP ---

      # --- REMOVE THE 'Generate Firebase Access Token' step ---
      # We will rely on Firebase picking up ADC through the gcloud context.
      # And remove the 'env: FIREBASE_TOKEN' from the Trigger step.

      - name: Trigger App Hosting Rollout
        # The Firebase CLI should now pick up the authentication from the gcloud context.
        # No need for FIREBASE_TOKEN env var, or --project flag (as it's set in gcloud config).
        run: |
          firebase apphosting:rollouts:create joaquin-prod \
            --git-branch=${{ github.ref_name }} \
            --git-commit=${{ github.sha }}
