name: Deploy to Firebase App Hosting on Production Push

on:
  push:
    branches:
      - production

jobs:
  build_and_deploy_prod:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # This permission is essential for Workload Identity Federation!

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth # Keep this ID for accessing its outputs
        name: Authenticate to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/371246421587/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-apphosting@joaquin-q0wvv.iam.gserviceaccount.com'
          create_credentials_file: true # This creates the WIF credentials file and sets GOOGLE_APPLICATION_CREDENTIALS

      # You can keep this debug step, or remove it for a cleaner log after confirming it works
      - name: Verify GCloud Authentication Context
        run: |
          echo "--- GOOGLE_APPLICATION_CREDENTIALS file exists and content (masked) ---"
          if [ -f "${{ env.GOOGLE_APPLICATION_CREDENTIALS }}" ]; then
            cat "${{ env.GOOGLE_APPLICATION_CREDENTIALS }}" | head -n 5 # Show first few lines
            echo "..."
          else
            echo "ERROR: GOOGLE_APPLICATION_CREDENTIALS file not found!"
          fi
          echo ""
          echo "--- gcloud auth list (Active Account) ---"
          gcloud auth list --format="yaml" # This might still be empty, but it's okay now.
          echo ""
          echo "--- gcloud config list project ---"
          gcloud config list project
          echo ""
          echo "--- Attempting gcloud auth print-access-token (explicitly using key-file) ---"
          gcloud auth print-access-token --credential-file-override="${{ steps.auth.outputs.credentials_file_path }}" || true
          echo "Finished gcloud auth print-access-token attempt."

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Generate Firebase Access Token
        id: generate_token
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token --credential-file-override="${{ steps.auth.outputs.credentials_file_path }}")
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"
        env:
          CLOUDSDK_CORE_PROJECT: joaquin-q0wvv

      - name: Trigger App Hosting Rollout
        env:
          FIREBASE_TOKEN: ${{ steps.generate_token.outputs.ACCESS_TOKEN }}
        run: |
          firebase apphosting:rollouts:create joaquin-prod \
            --project=joaquin-q0wvv \
            --git-branch=${{ github.ref_name }} \
            --git-commit=${{ github.sha }}
