name: Deploy to Firebase App Hosting on Production Push

on:
  push:
    branches:
      - production

jobs:
  build_and_deploy_prod:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # This permission is essential for Workload Identity Federation!

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/371246421587/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-apphosting@joaquin-q0wvv.iam.gserviceaccount.com'
          create_credentials_file: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # --- NEW STEP HERE ---
      - name: Authenticate Firebase CLI with Service Account
        run: |
          # Use gcloud to print an access token, which automatically uses the credentials
          # set up by the google-github-actions/auth step (via GOOGLE_APPLICATION_CREDENTIALS).
          ACCESS_TOKEN=$(gcloud auth print-access-token)

          # Log in the Firebase CLI using this short-lived access token.
          firebase login --token "$ACCESS_TOKEN" --project=joaquin-q0wvv
      # --- END NEW STEP ---

      - name: Trigger App Hosting Rollout
        # Now, the Firebase CLI should be authenticated!
        run: |
          firebase apphosting:rollouts:create joaquin-prod \
            --project=joaquin-q0wvv \
            --git-branch=${{ github.ref_name }} \
            --git-commit=${{ github.sha }}
